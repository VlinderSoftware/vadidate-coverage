name: Auto-merge Dependabot PRs

on:
  workflow_run:
    workflows: ["Test and Validate"]
    types: [completed]
    branches:
      - main
      - 'release/v*'

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'pull_request'
    steps:
      - name: Auto-merge Dependabot PR
        uses: actions/github-script@v7
        with:
          script: |
            // Get the pull request associated with this workflow run
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${context.payload.workflow_run.head_branch}`,
              state: 'open'
            });
            
            if (pullRequests.length === 0) {
              console.log('No open pull request found for this branch');
              return;
            }
            
            const pr = pullRequests[0];
            console.log(`Found PR #${pr.number}: ${pr.title}`);
            console.log(`PR author: ${pr.user.login}`);
            
            if (pr.user.login !== 'dependabot[bot]') {
              console.log('PR is not from Dependabot, skipping auto-merge');
              return;
            }
            
            console.log('Auto-merging Dependabot PR...');
            
            // Auto-merge the PR
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                commit_title: pr.title,
                commit_message: 'Auto-merged dependency update after successful checks',
                merge_method: 'squash'
              });
              
              console.log(`Successfully merged PR #${pr.number}`);
              
              // Add a comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: 'ü§ñ **Auto-merged by Dependabot** ü§ñ\n\nAll checks passed successfully. This dependency update has been automatically merged.'
              });
              
            } catch (error) {
              console.error('Failed to merge PR:', error.message);
              
              // Add a comment about the failure
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: '‚ö†Ô∏è **Auto-merge failed** ‚ö†Ô∏è\n\nFailed to automatically merge this PR. Please check the logs and merge manually if needed.'
              });
              
              throw error;
            }
